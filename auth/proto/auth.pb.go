// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/proto/auth.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	auth/proto/auth.proto

It has these top-level messages:
	Req
	Resp
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type BASE_PATH int32

const (
	BASE_PATH_rpc BASE_PATH = 0
)

var BASE_PATH_name = map[int32]string{
	0: "rpc",
}
var BASE_PATH_value = map[string]int32{
	"rpc": 0,
}

func (x BASE_PATH) String() string {
	return proto1.EnumName(BASE_PATH_name, int32(x))
}
func (BASE_PATH) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SRV int32

const (
	SRV_Auth SRV = 0
)

var SRV_name = map[int32]string{
	0: "Auth",
}
var SRV_value = map[string]int32{
	"Auth": 0,
}

func (x SRV) String() string {
	return proto1.EnumName(SRV_name, int32(x))
}
func (SRV) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type METHOD int32

const (
	METHOD_Verify METHOD = 0
)

var METHOD_name = map[int32]string{
	0: "Verify",
}
var METHOD_value = map[string]int32{
	"Verify": 0,
}

func (x METHOD) String() string {
	return proto1.EnumName(METHOD_name, int32(x))
}
func (METHOD) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Req struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Pwd  string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
}

func (m *Req) Reset()                    { *m = Req{} }
func (m *Req) String() string            { return proto1.CompactTextString(m) }
func (*Req) ProtoMessage()               {}
func (*Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Req) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Req) GetPwd() string {
	if m != nil {
		return m.Pwd
	}
	return ""
}

type Resp struct {
	Token    string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Verified bool   `protobuf:"varint,2,opt,name=verified" json:"verified,omitempty"`
}

func (m *Resp) Reset()                    { *m = Resp{} }
func (m *Resp) String() string            { return proto1.CompactTextString(m) }
func (*Resp) ProtoMessage()               {}
func (*Resp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Resp) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Resp) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func init() {
	proto1.RegisterType((*Req)(nil), "proto.Req")
	proto1.RegisterType((*Resp)(nil), "proto.Resp")
	proto1.RegisterEnum("proto.BASE_PATH", BASE_PATH_name, BASE_PATH_value)
	proto1.RegisterEnum("proto.SRV", SRV_name, SRV_value)
	proto1.RegisterEnum("proto.METHOD", METHOD_name, METHOD_value)
}

func init() { proto1.RegisterFile("auth/proto/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x2c, 0x2d, 0xc9,
	0xd0, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x07, 0x31, 0xf5, 0xc0, 0x4c, 0x21, 0x56, 0x30, 0xa5,
	0xa4, 0xcd, 0xc5, 0x1c, 0x94, 0x5a, 0x28, 0x24, 0xc4, 0xc5, 0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1,
	0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x66, 0x0b, 0x09, 0x70, 0x31, 0x17, 0x94, 0xa7, 0x48, 0x30,
	0x81, 0x85, 0x40, 0x4c, 0x25, 0x0b, 0x2e, 0x96, 0xa0, 0xd4, 0xe2, 0x02, 0x21, 0x11, 0x2e, 0xd6,
	0x92, 0xfc, 0xec, 0xd4, 0x3c, 0xa8, 0x72, 0x08, 0x47, 0x48, 0x8a, 0x8b, 0xa3, 0x2c, 0xb5, 0x28,
	0x33, 0x2d, 0x33, 0x15, 0xa2, 0x89, 0x23, 0x08, 0xce, 0xd7, 0x12, 0xe1, 0xe2, 0x74, 0x72, 0x0c,
	0x76, 0x8d, 0x0f, 0x70, 0x0c, 0xf1, 0x10, 0x62, 0xe7, 0x62, 0x2e, 0x2a, 0x48, 0x16, 0x60, 0xd0,
	0xe2, 0xe7, 0x62, 0x0e, 0x0e, 0x0a, 0x13, 0xe2, 0xe0, 0x62, 0x71, 0x2c, 0x2d, 0xc9, 0x10, 0x60,
	0xd0, 0x12, 0xe1, 0x62, 0xf3, 0x75, 0x0d, 0xf1, 0xf0, 0x77, 0x11, 0xe2, 0xe2, 0x62, 0x0b, 0x03,
	0x69, 0xae, 0x14, 0x60, 0x48, 0x62, 0x03, 0x3b, 0xd5, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x7d,
	0x6b, 0x9a, 0xc2, 0xca, 0x00, 0x00, 0x00,
}
